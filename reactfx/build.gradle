plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser' version '1.19.0'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

group = 'org.reactfx'

dependencies {
    // Test dependencies
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testImplementation group: 'org.junit.contrib', name: 'junit-theories', version: '4.12'
    testImplementation group: 'com.pholser', name: 'junit-quickcheck-core', version: '0.4'
    testImplementation group: 'com.pholser', name: 'junit-quickcheck-generators', version: '0.4'
}

javafx {
    version = "18"
    modules = ['javafx.controls', 'javafx.swing']
}

javadoc {
    // ignore missing Javadoc comments or tags
    options.addStringOption('Xdoclint:all,-missing', '-quiet')
    
    // resolve links to Java and JavaFX Javadocs
    options.links = [
        'http://docs.oracle.com/javase/8/docs/api/',
        'http://docs.oracle.com/javase/8/javafx/api/'
    ]
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            groupId = 'org.reactfx'
            artifactId = 'reactfx'

            pom {
                name = 'ReactFX'
                description = 'Reactive event streams for JavaFX'
                url = 'http://www.reactfx.org/'
                inceptionYear = '2013'
                packaging 'jar'
                licenses {
                    license {
                        name = 'The BSD 2-Clause License'
                        url = 'http://opensource.org/licenses/BSD-2-Clause'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = 'scm:git@github.com:TomasMikula/ReactFX.git'
                    connection = 'scm:git@github.com:TomasMikula/ReactFX.git'
                    developerConnection = 'scm:git@github.com:TomasMikula/ReactFX.git'
                }
                developers {
                    developer {
                        name = 'Tomas Mikula'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

// deploy artifacts with `gradle build publish jreleaserDeploy`
jreleaser {
  signing {
    active = 'ALWAYS'
    armored = true
    mode = 'FILE'
    // set the following in ~/.jreleaser/config.properties
    //   JRELEASER_GPG_PUBLIC_KEY=/path/to/public.gpg
    //   JRELEASER_GPG_SECRET_KEY=/path/to/secret.gpg
    //   JRELEASER_GPG_PASSPHRASE=<passphrase>
  }
  deploy {
    maven {
      mavenCentral {
        'release-deploy' {
          active = 'RELEASE'
          url = 'https://central.sonatype.com/api/v1/publisher'
          stagingRepository('build/staging-deploy')
        }
        // set the following properties in  ~/.jreleaser/config.properties
        //   JRELEASER_MAVENCENTRAL_USERNAME
        //   JRELEASER_MAVENCENTRAL_PASSWORD
      }
      nexus2 {
        'snapshot-deploy' {
          active = 'SNAPSHOT'
          snapshotUrl = 'https://central.sonatype.com/repository/maven-snapshots/'
          applyMavenCentralRules = true
          snapshotSupported = true
          closeRepository = true
          releaseRepository = true
          stagingRepository('build/staging-deploy')
        }
        // set the following properties in  ~/.jreleaser/config.properties
        //   JRELEASER_NEXUS2_USERNAME
        //   JRELEASER_NEXUS2_PASSWORD
      }
    }
  }
}
